apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  01-schema.sql: |
    -- Database schema for E-Commerce CI/CD Demo Application
    
    -- Create database
    CREATE DATABASE IF NOT EXISTS ecommerce_demo;
    USE ecommerce_demo;
    
    -- Create tables
    -- Categories table
    CREATE TABLE IF NOT EXISTS categories (
      id INT AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(100) NOT NULL,
      description TEXT,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );
    
    -- Products table
    CREATE TABLE IF NOT EXISTS products (
      id INT AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(255) NOT NULL,
      price DECIMAL(10, 2) NOT NULL,
      image VARCHAR(255),
      description TEXT,
      category_id INT,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE SET NULL
    );
    
    -- Inventory table
    CREATE TABLE IF NOT EXISTS inventory (
      product_id INT PRIMARY KEY,
      quantity INT NOT NULL DEFAULT 0,
      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
    );
    
    -- Users table (simplified for demo)
    CREATE TABLE IF NOT EXISTS users (
      id VARCHAR(36) PRIMARY KEY,
      email VARCHAR(255) NOT NULL UNIQUE,
      name VARCHAR(255) NOT NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );
    
    -- Carts table
    CREATE TABLE IF NOT EXISTS carts (
      id INT AUTO_INCREMENT PRIMARY KEY,
      user_id VARCHAR(36) NOT NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    );
    
    -- Cart items table
    CREATE TABLE IF NOT EXISTS cart_items (
      id INT AUTO_INCREMENT PRIMARY KEY,
      cart_id INT NOT NULL,
      product_id INT NOT NULL,
      quantity INT NOT NULL DEFAULT 1,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      FOREIGN KEY (cart_id) REFERENCES carts(id) ON DELETE CASCADE,
      FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE,
      UNIQUE KEY (cart_id, product_id)
    );
    
    -- Orders table
    CREATE TABLE IF NOT EXISTS orders (
      id VARCHAR(36) PRIMARY KEY,
      user_id VARCHAR(36) NOT NULL,
      total DECIMAL(10, 2) NOT NULL,
      status ENUM('Processing', 'Shipped', 'Delivered', 'Cancelled') NOT NULL DEFAULT 'Processing',
      shipping_name VARCHAR(255) NOT NULL,
      shipping_address VARCHAR(255) NOT NULL,
      shipping_city VARCHAR(100) NOT NULL,
      shipping_state VARCHAR(100) NOT NULL,
      shipping_zip VARCHAR(20) NOT NULL,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    );
    
    -- Order items table
    CREATE TABLE IF NOT EXISTS order_items (
      id INT AUTO_INCREMENT PRIMARY KEY,
      order_id VARCHAR(36) NOT NULL,
      product_id INT NOT NULL,
      name VARCHAR(255) NOT NULL,
      price DECIMAL(10, 2) NOT NULL,
      quantity INT NOT NULL DEFAULT 1,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE,
      FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
    );
    
  02-init-data.sql: |
    -- Initialize database with sample data for E-Commerce CI/CD Demo Application
    
    USE ecommerce_demo;
    
    -- Insert sample categories
    INSERT INTO categories (name, description) VALUES
    ('Electronics', 'Electronic devices and gadgets'),
    ('Audio', 'Audio equipment and accessories'),
    ('Wearables', 'Wearable technology and accessories');
    
    -- Insert sample products
    INSERT INTO products (name, price, image, description, category_id) VALUES
    ('Smartphone X', 699.99, 'https://via.placeholder.com/300', 'Latest smartphone with advanced features', 1),
    ('Laptop Pro', 1299.99, 'https://via.placeholder.com/300', 'High-performance laptop for professionals', 1),
    ('Wireless Headphones', 149.99, 'https://via.placeholder.com/300', 'Premium sound quality with noise cancellation', 2),
    ('Smart Watch', 249.99, 'https://via.placeholder.com/300', 'Track your fitness and stay connected', 3),
    ('Bluetooth Speaker', 79.99, 'https://via.placeholder.com/300', 'Portable speaker with rich sound', 2),
    ('Tablet Ultra', 499.99, 'https://via.placeholder.com/300', 'Slim and powerful tablet for entertainment', 1);
    
    -- Insert sample inventory
    INSERT INTO inventory (product_id, quantity) VALUES
    (1, 50),
    (2, 25),
    (3, 100),
    (4, 30),
    (5, 75),
    (6, 15);
    
    -- Insert sample user
    INSERT INTO users (id, email, name) VALUES
    ('user123', 'user@example.com', 'John Doe');
    
    -- Insert sample cart
    INSERT INTO carts (user_id) VALUES
    ('user123');
    
    -- Get the cart ID
    SET @cart_id = LAST_INSERT_ID();
    
    -- Insert sample cart items
    INSERT INTO cart_items (cart_id, product_id, quantity) VALUES
    (@cart_id, 1, 1),
    (@cart_id, 3, 2);
    
    -- Insert sample orders
    INSERT INTO orders (id, user_id, total, status, shipping_name, shipping_address, shipping_city, shipping_state, shipping_zip) VALUES
    ('ORD-2025-001', 'user123', 1099.97, 'Delivered', 'John Doe', '123 Main St', 'Anytown', 'CA', '12345'),
    ('ORD-2025-002', 'user123', 579.98, 'Processing', 'John Doe', '123 Main St', 'Anytown', 'CA', '12345');
    
    -- Insert sample order items
    INSERT INTO order_items (order_id, product_id, name, price, quantity) VALUES
    ('ORD-2025-001', 1, 'Smartphone X', 699.99, 1),
    ('ORD-2025-001', 3, 'Wireless Headphones', 149.99, 2),
    ('ORD-2025-002', 6, 'Tablet Ultra', 499.99, 1),
    ('ORD-2025-002', 5, 'Bluetooth Speaker', 79.99, 1);
